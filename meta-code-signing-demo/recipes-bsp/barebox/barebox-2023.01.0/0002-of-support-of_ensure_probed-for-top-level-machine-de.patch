From 4b6503a12e99454628f196d13072ef9633110f52 Mon Sep 17 00:00:00 2001
From: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date: Fri, 10 Feb 2023 17:13:43 +0100
Subject: [PATCH 2/4] of: support of_ensure_probed for top-level machine device

Creation of a machine device for the top-level node has special casing
in of_probe(). Export of_platform_device_create_root(), so it's possible
to ensure probe of the machine device. This is required when doing
of_devices_ensure_probed_by_dev_id with the machine compatible.

Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
Upstream-Status: Submitted
---
 drivers/of/base.c     | 10 +++++++---
 drivers/of/platform.c |  2 +-
 include/of.h          |  1 +
 3 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/of/base.c b/drivers/of/base.c
index 9879d389c9ce..af3680cceea6 100644
--- a/drivers/of/base.c
+++ b/drivers/of/base.c
@@ -2512,13 +2512,13 @@ static int of_probe_memory(void)
 }
 mem_initcall(of_probe_memory);
 
-static void of_platform_device_create_root(struct device_node *np)
+struct device *of_platform_device_create_root(struct device_node *np)
 {
 	static struct device_d *dev;
 	int ret;
 
 	if (dev)
-		return;
+		return dev;
 
 	dev = xzalloc(sizeof(*dev));
 	dev->id = DEVICE_ID_SINGLE;
@@ -2526,8 +2526,12 @@ static void of_platform_device_create_root(struct device_node *np)
 	dev_set_name(dev, "machine");
 
 	ret = platform_device_register(dev);
-	if (ret)
+	if (ret) {
 		free_device(dev);
+		return ERR_PTR(ret);
+	}
+
+	return dev;
 }
 
 static const struct of_device_id reserved_mem_matches[] = {
diff --git a/drivers/of/platform.c b/drivers/of/platform.c
index 2b5ad08c124b..2675679fb7d5 100644
--- a/drivers/of/platform.c
+++ b/drivers/of/platform.c
@@ -417,7 +417,7 @@ static struct device_d *of_device_create_on_demand(struct device_node *np)
 
 	parent = of_get_parent(np);
 	if (!parent)
-		return NULL;
+		return of_platform_device_create_root(np);
 
 	if (!np->dev)
 		pr_debug("Creating device for %s\n", np->full_name);
diff --git a/include/of.h b/include/of.h
index 5d4bf9196f61..4ce932d43aee 100644
--- a/include/of.h
+++ b/include/of.h
@@ -293,6 +293,7 @@ extern void of_platform_device_dummy_drv(struct device_d *dev);
 extern int of_platform_populate(struct device_node *root,
 				const struct of_device_id *matches,
 				struct device_d *parent);
+extern struct device *of_platform_device_create_root(struct device_node *np);
 extern struct device_d *of_find_device_by_node(struct device_node *np);
 extern struct device_d *of_device_enable_and_register(struct device_node *np);
 extern struct device_d *of_device_enable_and_register_by_name(const char *name);
-- 
2.30.2

